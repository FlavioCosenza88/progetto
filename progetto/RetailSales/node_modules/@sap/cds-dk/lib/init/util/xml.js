const cds = require('../../cds')
const { read } = cds.utils
const LOG = console

/*
  Remove the _text attributes and convert value it into array
  input : "groupId":[{"_text":["customer"]}]
  output: "groupId":["customer"]
*/
function _removeTextAttributes(value, parentElement) {
  const parentKeys = Object.keys(parentElement._parent)
  const key = parentKeys[parentKeys.length - 1]
  const _text = parentElement._parent[key]
  if (_text.length > 0) {
      _text[_text.length - 1] = value
  } else {
      parentElement._parent[key] = value
  }
}

/**
 * Parse a given string containing xml
 * used to remove the _text object from converted json i.e. from xml-js.
 * example: converted json has "groupId":[{"_text":["customer"]}]
 * and after removing textAttributes (using this function): "groupId":["customer"]
 * @param xml string to parse
 * @returns parsed json object
*/

async function parseXml(pomXmlPath) {
  const xmljs = require('xml-js')
  const xmljsParse = {}
  try {
      const xml = await read(pomXmlPath, 'utf-8')
      xmljsParse.project = JSON.parse(xmljs.xml2json(xml, {
          ignoreComment: true,
          compact: true,
          alwaysArray: true,
          ignoreDeclaration: true,
          attributesKey: "$",
          trim: true,
          nativeType: true,
          ignoreInstruction: true,
          ignoreCdata: true,
          ignoreDoctype: true,
          textFn: _removeTextAttributes
      })).project[0]
      return xmljsParse
  } catch (e) {
    // REVISIT: We shouldn't continue with errors
    LOG.error(`Failed to read file ${pomXmlPath} - skip pom.xml data`)
    LOG.error(e)
  }
}

module.exports = { parseXml }
