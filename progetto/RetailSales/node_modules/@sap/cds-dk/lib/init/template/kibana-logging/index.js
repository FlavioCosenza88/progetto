const { join } = require('path')
const cds = require('../../../cds')
const { readProject } = require('../../util/projectReader')
const { mergeJSON, mergeYAML } = require('../../util/merge')
const { srvNode4, srvJava4, kibanaLogging } = require('../_merging/registry-mta')

module.exports = class KibanaLoggingTemplate extends require('../templateBase') {

    async canRun() {
        const projectDescriptor = await readProject(this.options)
        const { hasMta, hasHelm } = projectDescriptor.cap
        if (hasHelm && !hasMta) {
            throw `'cds add kibana-logging' is not available for Kyma yet`
        }
        return true
    }

    async run() {
        const projectDescriptor = await readProject(this.options)
        const { isJava } = projectDescriptor.cap
        if (isJava) cds.error(`kibana-logging is not implemented for project type Java yet`)
        await mergeJSON('package.json', join(__dirname, 'files', 'package.json.hbs'), projectDescriptor)
        await this.runDependentMerging()
    }

    async runDependentMerging() {
        const projectDescriptor = await readProject(this.options)
        const { hasMta, isNodejs, srvPath } = projectDescriptor.cap

        if (hasMta) {
            const srv = (isNodejs ? srvNode4 : srvJava4)(srvPath)
            await mergeYAML(
                'mta.yaml',
                join(__dirname, 'files', 'mta.yaml.hbs'),
                projectDescriptor,
                {
                    additions: [srv, kibanaLogging],
                    relationships: [{
                        insert: [kibanaLogging, 'name'],
                        into: [srv, 'requires', 'name']
                    }],
                }
            )
        }
    }
}
